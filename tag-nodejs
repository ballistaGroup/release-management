# 'RM' prefix stands for "Release Management"

RM_PKG_JSON=${RM_PKG_JSON:-./package.json}
RM_STABLE=${RM_STABLE:-stable}
RM_NEXT=${RM_NEXT:-next}

RM_LATEST=${RM_LATEST:-latest}
RM_TMP_TAG=${RM_TMP_TAG:-$RM_LATEST}

echo "RM_PKG_JSON=$RM_PKG_JSON"
echo "RM_STABLE=$RM_STABLE"
echo "RM_NEXT=$RM_NEXT"
echo "RM_LATEST=$RM_LATEST"
echo "RM_TMP_TAG=$RM_TMP_TAG"

RM_PKG_NAME=$(node -e "process.stdout.write(require('$RM_PKG_JSON').name)")
RM_PKG_VERSION=$(node -e "process.stdout.write(require('$RM_PKG_JSON').version)")
RM_MINOR_VERSION=$(echo -n "$RM_PKG_VERSION" | egrep -o '^\d+\.\d+')
RM_GREATEST_MINOR_VERSION="$(git ls-remote origin | grep refs/heads | egrep -o '/v\d+\.\d+$' | egrep -o '\d+\.\d+$' | sort -t . -k 1,1n -k 2,2n | tail -1)"
RM_TAG_PREFIX=$RM_STABLE
if echo -n "$RM_PKG_VERSION" | egrep -q '\-[^\.]+\.\d+$'; then RM_TAG_PREFIX=$RM_NEXT; fi # if a semver prerelease
RM_TAG="$RM_TAG_PREFIX-$RM_MINOR_VERSION"

echo "RM_PKG_NAME=$RM_PKG_NAME"
echo "RM_PKG_VERSION=$RM_PKG_VERSION"
echo "RM_MINOR_VERSION=$RM_MINOR_VERSION"
echo "RM_GREATEST_MINOR_VERSION=$RM_GREATEST_MINOR_VERSION"
echo "RM_TAG_PREFIX=$RM_TAG_PREFIX"
echo "RM_TAG=$RM_TAG"

CMD="npm dist-tag add $RM_PKG_NAME@$RM_PKG_VERSION $RM_TAG"
echo "$CMD"
$CMD

if [ "$RM_TAG_PREFIX" == "$RM_STABLE" ]; then # this is a stable release
  if [ "$RM_MINOR_VERSION" == "$RM_GREATEST_MINOR_VERSION" ]; then # add "latest" tag if latest stable release
    if npm dist-tag ls | egrep -q "^$RM_LATEST:"; then # rm "latest" tag if present
      CMD="npm dist-tag rm $RM_PKG_NAME $RM_LATEST"
      echo "$CMD"
      $CMD
    fi
    CMD="npm dist-tag add $RM_PKG_NAME@$RM_PKG_VERSION $RM_LATEST" # now add it
    echo "$CMD"
    $CMD
  fi
  if npm dist-tag ls | egrep -q "^$RM_NEXT-$RM_MINOR_VERSION:"; then # if a "next-x.y" tag exists, rm it
    CMD="npm dist-tag rm $RM_PKG_NAME $RM_NEXT-$RM_MINOR_VERSION"
    echo "$CMD"
    $CMD
  fi
fi

if npm dist-tag ls | egrep -q "^$RM_TMP_TAG:"; then # try to rm temporary tag if present
  set +e
  CMD="npm dist-tag rm $RM_PKG_NAME $RM_TMP_TAG"
  echo "$CMD"
  $CMD
fi
